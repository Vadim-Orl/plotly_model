@charset "UTF-8";body{max-width:100%}.button{width:150px;background-color:#90adbf;color:#36393b;font-size:medium;border:1px solid #5f8297}.button:hover{background-color:#a4bac7}@media (min-width:320px) and (max-width:1240px){.button{width:40%}}@media (min-width:768px) and (max-width:1199px){.button{width:200px}}.shadow__true{position:absolute;width:100%;height:200%;z-index:90;top:0;right:0;left:0;background:rgba(128,128,128,.8)}
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{line-height:1.15;-webkit-text-size-adjust:100%}body,sub,sup{position:relative}body{margin:0;font-family:"Gill Sans","Gill Sans MT",Calibri,"Trebuchet MS",sans-serif}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;text-decoration:none}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio],legend{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}.hidden,[hidden],template{display:none}*,::after,::before{box-sizing:border-box}.visually-hidden:not(:focus):not(:active),input[type=checkbox].visually-hidden,input[type=radio].visually-hidden{position:absolute;width:1px;height:1px;margin:-1px;border:0;padding:0;white-space:nowrap;-webkit-clip-path:inset(100%);clip-path:inset(100%);clip:rect(0 0 0 0);overflow:hidden}.modal-form{position:absolute;top:100px;left:40%;right:50%;width:300px;height:100%;z-index:100}.button__plan{width:100%;border:1px solid #5f8297}.modal-form--opened .form-toggle{width:25px;height:25px;position:absolute;z-index:100;right:0;background-color:#c1defb;border:1px solid #9a9b9c;border-radius:100%}.modal-form--opened .form-toggle::after,.modal-form--opened .form-toggle::before{content:"";position:absolute;z-index:130;top:10px;right:3px;width:15px;height:3px;background-color:#373737}.modal-form--opened .form-toggle::before{transform:rotate(45deg)}.modal-form--opened .form-toggle::after{transform:rotate(-45deg)}.modal-form--opened .form-toggle:hover::after,.modal-form--opened .form-toggle:hover::before{background-color:#626c78}.modal-form--opened .form-toggle:active::after,.modal-form--opened .form-toggle:active::before{opacity:.3}.btns-plan-wrapper{width:30%;display:flex;justify-content:space-around;align-items:center;margin:20px auto 0}@media (min-width:320px) and (max-width:1240px){.btns-plan-wrapper{width:80%}}.form__tabs-add-bar{justify-content:center;align-items:center;width:50%;display:flex;background-color:#eceef2;padding:10px;margin:20px auto 0}@media (min-width:320px) and (max-width:767px){.form__tabs-add-bar{flex-direction:column;justify-content:space-around;width:80%}}@media (min-width:768px) and (max-width:1199px){.form__tabs-add-bar{width:80%}}.form,.form fieldset{justify-content:space-around;align-items:center}.form fieldset{display:flex;position:relative;border:2px solid #e4e8e4;background-color:#f5f1f1;border-radius:10px;padding:3px 6px}.form legend{background-color:#c1defb;padding:0 10px;font-size:large;color:#36393b}.form input[type=number],.form input[type=time]{padding:0;flex-grow:1;height:20px;border:2px solid #bfbcbc;border-radius:3px;width:80px;text-align:center}@media (min-width:320px) and (max-width:1240px){.form input[type=number],.form input[type=time]{margin-bottom:0}}.form input[type=number]:hover,.form input[type=time]:hover{border:2px solid #626c78}.form input[type=number]:active,.form input[type=number]:focus,.form input[type=time]:active,.form input[type=time]:focus{border:2px solid #d22856}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */